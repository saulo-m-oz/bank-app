import { FormEvent, useState } from "react";
import { GetServerSideProps } from "next";
import { parseCookies } from "nookies";
import { getAPIClient } from "../../api/axios";
import { BalanceCard } from "../../components/common/balance";
import { api } from "../../api/api";

import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";

export default function Pix({ balance }: any) {

  const router = useRouter();
  const [balanceAvailable, setBalance] = useState(balance);

  const [username, setUsername] = useState<string | null>(null);
  const [amount, setAmount] = useState<number | null>(null);

  const [isLoading, setLoading] = useState(false);
  const [error, setError] = useState<null | string>(null);
  const [success, setSuccess] = useState<string | null>(null);

  async function handleSubmit(e: FormEvent<HTMLFormElement>) {
    e.preventDefault();

    setLoading(true);
    setError(null);
    setSuccess(null);

    try {
      const data = { username, amount };
      const response = await api.post("transactions", data);
      if (response) {
        const response = await api.get("account");
        const {balance} = response.data;
        setBalance(balance);
        setTimeout(() => {
          setLoading(false);
          setSuccess(`Você transferiu R$${amount} para ${username} com sucesso.`);
        }, 1200);
      }
    } catch (error: any) {
      setTimeout(() => {
        setLoading(false);
        setError(error.response.data.message);
      }, 1000);
    }

  }

  return (
    <div className="h-screen bg-white">
      <Head>
        <title>Transferir via Pix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-full max-w-[850px] mx-auto flex flex-col gap-5 px-5 py-10">
        <div className="flex justify-between items-center border-b animate-menuSlide">
          <div>
            <h1 className="text-3xl text-primary font-bold drop-shadow-md lg:mb-5">
              Transferir via Pix
            </h1>
            <span className="font-bold drop-shadow-md">
              Envie cash instantaneamente para outro usuário
            </span>
          </div>
        </div>
        {!isLoading && (
          <div className="flex flex-col gap-5 animate-buttonSlideUp">
            <BalanceCard balance={balanceAvailable} />
            <form
              onSubmit={handleSubmit}
              className="flex flex-col w-full max-w-xl mx-auto"
            >
              <input
                onChange={(e) => setUsername(e.target.value)}
                className="w-full text-white p-3 rounded-t-md border border-b-0 border-primary bg-black outline-none appearance-none"
                type="text"
                placeholder="Insira o username"
                required
              />
              <input
                onChange={(e) => setAmount(Number(e.target.value))}
                className="w-full text-white p-3 rounded-b-md border border-primary bg-black mb-3 outline-none appearance-none"
                type="number"
                placeholder="Insira o valor"
                required
              />
              <p className="text-red mb-3 first-letter:capitalize">{error}</p>
              <p className="text-primary mb-3 first-letter:capitalize">{success}</p>
              <button className="inline-block w-full bg-primary text-center p-3 rounded-md text-white font-semibold mb-5">
                Enviar
              </button>
              <Link
                href="/dashboard"
                className="inline-block w-full bg-primary text-center p-3 rounded-md text-white font-semibold mb-5"
              >
                Retornar
              </Link>
            </form>
          </div>
        )}
        {isLoading && (
          <div className="text-3xl font-bold animate-menuSlide">
            Carregando...
          </div>
        )}
      </div>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const apiClient = getAPIClient(ctx);
  const { ["next.token"]: token } = parseCookies(ctx);

  if (!token) {
    return {
      redirect: {
        destination: "/iniciar-sessao",
        permanent: false,
      },
    };
  }

  const response = await apiClient.get("account");
  const { balance } = response.data;

  return {
    props: {
      balance,
    },
  };
};
